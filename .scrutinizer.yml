filter:
    excluded_paths:
        - 'app/*'
        - 'tests/*'
        - 'bin/*'
        - '*.min.js'
        - 'web/assets/vendor/*'
        - 'var/'
checks:
    php:
        verify_property_names: true
        verify_argument_usable_as_reference: true
        verify_access_scope_valid: true
        variable_existence: true
        useless_calls: true
        use_statement_alias_conflict: true
        use_self_instead_of_fqcn: true
        uppercase_constants: true
        unused_variables: true
        unused_properties: true
        unused_methods: true
        unused_parameters: true
        unreachable_code: true
        too_many_arguments: true
        symfony_request_injection: true
        switch_fallthrough_commented: true
        sql_injection_vulnerabilities: true
        single_namespace_per_use: true
        simplify_boolean_return: true
        side_effects_or_types: true
        security_vulnerabilities: true
        return_doc_comments: true
        return_doc_comment_if_not_inferrable: true
        require_scope_for_properties: true
        require_scope_for_methods: true
        require_php_tag_first: true
        remove_extra_empty_lines: true
        psr2_switch_declaration: true
        psr2_class_declaration: true
        property_assignments: true
        properties_in_camelcaps: true
        prefer_while_loop_over_for_loop: true
        precedence_mistakes: true
        precedence_in_conditions: true
        phpunit_assertions: true
        php5_style_constructor: true
        parse_doc_comments: true
        parameters_in_camelcaps: true
        parameter_non_unique: true
        parameter_doc_comments: true
        param_doc_comment_if_not_inferrable: true
        overriding_private_members: true
        optional_parameters_at_the_end: true
        one_class_per_file: true
        non_commented_empty_catch_block: true
        no_unnecessary_if: true
        no_unnecessary_final_modifier: true
        no_underscore_prefix_in_properties: true
        no_underscore_prefix_in_methods: true
        no_trait_type_hints: true
        no_trailing_whitespace: true
        no_short_variable_names:
            minimum: '3'
        no_short_open_tag: true
        no_short_method_names:
            minimum: '3'
        no_property_on_interface: true
        no_non_implemented_abstract_methods: true
        no_new_line_at_end_of_file: true
        no_long_variable_names:
            maximum: '32'
        no_goto: true
        no_global_keyword: true
        no_exit: true
        no_eval: true
        no_error_suppression: true
        no_empty_statements: true
        no_duplicate_arguments: true
        no_debug_code: true
        no_commented_out_code: true
        newline_at_end_of_file: true
        more_specific_types_in_doc_comments: true
        naming_conventions:
            local_variable: '^[a-z][a-zA-Z0-9]*$'
            abstract_class_name: ^Abstract|Factory$
            utility_class_name: 'Utils?$'
            constant_name: '^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$'
            property_name: '^[a-z][a-zA-Z0-9]*$'
            method_name: '^(?:[a-z]|__)[a-zA-Z0-9]*$'
            parameter_name: '^[a-z][a-zA-Z0-9]*$'
            interface_name: '^[A-Z][a-zA-Z0-9]*Interface$'
            type_name: '^[A-Z][a-zA-Z0-9]*$'
            exception_name: '^[A-Z][a-zA-Z0-9]*Exception$'
        line_length:
            max_length: '120'
        method_calls_on_non_object: true
        missing_arguments: true
        align_assignments: false
        argument_type_checks: true
        assignment_of_null_return: true
        avoid_aliased_php_functions: true
        avoid_closing_tag: true
        avoid_conflicting_incrementers: true
        avoid_corrupting_byteorder_marks: true
        avoid_duplicate_types: true
        avoid_entity_manager_injection: true
        avoid_fixme_comments: true
        avoid_length_functions_in_loops: true
        avoid_multiple_statements_on_same_line: true
        avoid_perl_style_comments: true
        avoid_superglobals: true
        avoid_todo_comments: true
        avoid_unnecessary_concatenation: true
        avoid_usage_of_logical_operators: true
        avoid_useless_overridden_methods: true
        blank_line_after_namespace_declaration: true
        catch_class_exists: true
        classes_in_camel_caps: true
        closure_use_modifiable: true
        closure_use_not_conflicting: true
        code_rating: true
        deadlock_detection_in_loops: true
        deprecated_code_usage: true
        duplication: true
        encourage_postdec_operator: true
        encourage_shallow_comparison: true
        encourage_single_quotes: true
        fix_doc_comments: true
        fix_line_ending: true
        fix_use_statements:
            remove_unused: true
            preserve_multiple: true
            preserve_blanklines: true
            order_alphabetically: false
        foreach_traversable: true
        foreach_usable_as_reference: true
        instanceof_class_exists: true
        function_in_camel_caps: true

tools:
    # As there is no Unit test (for the moment),
    # temporary disable code coverage timeout
    # Default value is `600`
    # timeout: 1
    external_code_coverage: false

build:
    nodes:
        analysis:
            project_setup:
                override: true
            tests:
                override: [php-scrutinizer-run]
    environment:
        timezone: Europe/Paris
        postgresql: false
        rabbitmq: false
        mysql: 5.7
        redis: false
        php:
            version: 7.1
            ini:
                'date.timezone': 'Europe/Paris'

build_failure_conditions:
    - 'elements.rating(<= D).new.exists'
    - 'issues.label("coding-style").new.exists'
    - 'issues.severity(>= MINOR).new.exists'
    - 'project.metric_change("scrutinizer.test_coverage", < -0.10)'
    - 'patches.label("Doc Comments").exists'
